# cloudbuild.yaml

# ─── Optionen ──────────────────────────────────────────────────────────────
# Da du ein benutzerdefiniertes Service-Konto als Standard
# im UI festgelegt hast, verlangt Cloud Build, dass du
# eine Logging-Option angibst.
options:
  logging: CLOUD_LOGGING_ONLY

# ─── Build-Schritte ────────────────────────────────────────────────────────
steps:
  # 1) Docker-Image bauen und in Artifact Registry pushen
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - -t
      - "${_REGION}-docker.pkg.dev/${_PROJECT}/cloud-run-source-deploy/${_SERVICE}:${SHORT_SHA}"
      - .
  # 2) Service auf Cloud Run deployen
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: bash
    args:
      - -c
      - |
        gcloud run deploy "${_SERVICE}" \
          --image="${_REGION}-docker.pkg.dev/${_PROJECT}/cloud-run-source-deploy/${_SERVICE}:${SHORT_SHA}" \
          --region="${_REGION}" \
          --platform=managed \
          --allow-unauthenticated \
          --memory=512Mi \
          --cpu=1 \
          --concurrency=80 \
          --port=8080 \
          --set-env-vars=server_id=${_SERVER_ID},bot_key=${_BOT_KEY}

# ─── Images zum Exportieren ─────────────────────────────────────────────────
images:
  - "${_REGION}-docker.pkg.dev/${_PROJECT}/cloud-run-source-deploy/${_SERVICE}:${SHORT_SHA}"

# ─── Platzhalter / Substitutionen ───────────────────────────────────────────
substitutions:
  _PROJECT:   "lotus-gaming-bot"   # dein GCP-Projekt
  _REGION:    "europe-west1"       # Region von Artifact Registry & Cloud Run
  _SERVICE:   "lotusgamingde"      # Cloud Run Service-Name
  _SERVER_ID: ""                   # <- Wert im Trigger setzen!
  _BOT_KEY:   ""                   # <- Wert im Trigger setzen!
