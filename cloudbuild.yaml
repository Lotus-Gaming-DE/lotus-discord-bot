# cloudbuild.yaml

# 0) Damit Cloud Build mit Deinem gewählten Service-Account (aus den Einstellungen)
#    laufen kann, ohne extra logs_bucket anzugeben:
options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET

steps:
  # 1) Docker-Build
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - -t
      - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/cloud-run-source-deploy/${_SERVICE}:${SHORT_SHA}"
      - "."

  # 2) Docker-Push
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/cloud-run-source-deploy/${_SERVICE}:${SHORT_SHA}"

  # 3) Deploy in Cloud Run
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: bash
    args:
      - -c
      - |
        gcloud run deploy "${_SERVICE}" \
          --image="${_REGION}-docker.pkg.dev/${PROJECT_ID}/cloud-run-source-deploy/${_SERVICE}:${SHORT_SHA}" \
          --region="${_REGION}" \
          --platform=managed \
          --allow-unauthenticated \
          --memory=512Mi \
          --cpu=1 \
          --concurrency=80 \
          --port=8080 \
          --set-env-vars="server_id=${_SERVER_ID},bot_key=${_BOT_KEY}"

# Liste aller Variablen, die DU in Deinem Build-Trigger überschreiben kannst:
substitutions:
  # Standort & Projektdaten (kann hier stehen, muss in Trigger nicht wiederholt werden)
  _REGION: "europe-west1"
  _SERVICE: "lotusgamingde"

  # Discord-spezifische Secrets – IM TRIGGER befüllen!
  _SERVER_ID: "PUT_YOUR_SERVER_ID_HERE"
  _BOT_KEY:   "PUT_YOUR_BOT_TOKEN_HERE"

# Max. 20 Minuten Timeout (falls Dein Build mal länger braucht):
timeout: "1200s"
