name: Security Audit

on:
  pull_request:
    paths:
      - 'requirements*.txt'
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  pip-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Install pip-audit
        run: pip install pip-audit
      - name: Run pip-audit
        run: pip-audit -r requirements.txt
  snyk:
    runs-on: ubuntu-latest
    needs: pip-audit
    steps:
      - uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Install CycloneDX Python SBOM Tool
        run: |
          python -m pip install cyclonedx-bom
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Generate SBOM
        run: cyclonedx-py requirements -i requirements.txt -o sbom.xml
      - name: Install Snyk CLI
        run: npm install -g snyk
      - name: Run Snyk Test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        if: ${{ env.SNYK_TOKEN != '' && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false) }}
        run: snyk test
      - name: Upload SBOM
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.xml
      - name: Collect Railway logs
        if: success()
        run: |
          railway logs --follow > logs/latest_railway.log &
          sleep 30
          pkill -f "railway logs" || true
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: logs/
